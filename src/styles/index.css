:root {
	--left-margin: 2rem;
	--grid-gap: 3rem;
	--card-min-width: 35rem;
	--card-max-width: 45rem;
}

#quick-links ul {
	display: flex;
	flex-flow: row nowrap;
	justify-content: center;
}

#quick-links li {
	font-size: 1.5rem;
	padding: 1rem 2rem;
}

main {
	display: flex;
	flex-flow: row nowrap;
}

/* parallax */
.parallax {
	contain: paint;
	display: grid;
	grid-template-areas: "stack";

	/*z-index: 0;*/
	background: var(--colour-bg);
}

.parallax > * {
	grid-area: stack;
	animation: parallax linear;
	animation-timeline: scroll(root);
}

.parallax-background {
	position: absolute;
	top: 100px;
	--parallax-speed: -300;
	z-index: -1;
	display: block;
	max-width: 100%;
	/*background: var(--colour-bg);*/
	mix-blend-mode: screen;
	/*filter: opacity(0.1) contrast(1000);*/
}

@keyframes parallax {
	to {
		transform: translateY(calc(var(--parallax-speed) * 1px));
	}
}

/* main page content */
#content {
	flex-grow: 1;
}

header {
	margin-left: var(--left-margin);
	min-height: 80vh;
	display: grid;
	grid-template-rows: 1fr 30rem 1fr;
	align-items: end;
}

.hero {
	grid-row: 2 / 3;
	font-size: 2.5rem;
}

.hero img {
	border-radius: 50%;
	height: 20rem
}

/* side navbar to go between card sections */
#showcase-nav {
	margin: 36rem 2rem 0 2rem;
	font-size: 2rem;
	align-self: flex-start;
	position: sticky;
	top: 0;
	display: flex;
	flex-flow: column nowrap;
}

/* ------------------- */
/* card section styles */
/* ------------------- */

/* wrapper for card sections */
.section-wrapper {
	container: card-section / inline-size;  /* container queries implemented with JavaScript */
}

/* card section */
section {
	outline: rgba(255, 255, 255, 0.3) solid 1px;
	padding: 0 var(--grid-gap) var(--grid-gap) var(--left-margin);
	margin-bottom: var(--grid-gap);
	font-size: 1.5rem;
	overflow: hidden;
	border-radius: 0 0.3em 0.3em 0;
	background: rgba(255, 255, 255, 0.1);
	backdrop-filter: blur(5px) saturate(200%);
}

/* section title and description */
.section-header {
	padding: 1rem 0;
	display: grid;
	grid-template-areas:
	"title show-more"
	"description show-more";
	grid-template-columns: 1fr 5rem;
}

/* section expand button */
.section-show-more {
	cursor: pointer;
	grid-area: show-more;
	aspect-ratio: 1 / 1;
	position: relative;
}

/* section expand button */
.section-show-more::before, .section-show-more::after {
	content: "";
	position: absolute;
	background: var(--colour-fg);
	left: 50%;
	top: 0;
	bottom: 0;
	width: 0.5rem;
	border-radius: 0.25rem;
	transform: translateX(-50%);
}

/* rotate horizontal part of section expand button to make a plus symbol */
.section-show-more::after {
	transform: scaleX(1) translateX(-50%) rotateZ(90deg);
}

/* rotate whole section expand button when showing all cards */
.section-show-all .section-show-more {
	transform: rotateZ(-90deg);
}

/* shrink horizontal part of section expand button when showing all cards */
.section-show-all .section-show-more::after {
	transform: scaleX(0) translateX(-50%) rotateZ(90deg);
}

/* animate section expanding and button changing if animations are enabled */
@media screen and (prefers-reduced-motion: no-preference) {
	section {
		transition: height 0.8s var(--transition-exp);
	}

	.section-show-more, .section-show-more::after {
		transition: transform 0.8s var(--transition-exp);
	}
}

/* ----------- */
/* card styles */
/* ----------- */

/* grid display that contains all the card elements */
.card-container {
	display: grid;
	gap: var(--grid-gap);
	grid-template-columns: repeat(auto-fit, minmax(min(100%, var(--card-min-width)), 1fr));
}

.text-card-container {
	display: flex;
	flex-flow: column nowrap;
}

/* block element representing an individual card */
.card {
	--perspective: 500px;
	--rotateX: 0;
	--rotateY: 0;
	--scale: 1;

	outline: white solid 1px;
	aspect-ratio: 3/2;
	position: relative;
	border-radius: 0.3em;
	overflow: hidden;
	background-size: cover;
}

.text-card {
	position: relative;
}

/* the title, description, and link for the card */
.card-content {
	--title-height: 0rem;
	--padding: 1rem;

	position: absolute;
	bottom: 0;
	padding: var(--padding);
	background: linear-gradient(
			rgba(0, 0, 0, 0),
			rgba(0, 0, 0, 0.4) 10%,
			rgba(0, 0, 0, 1)
	);
}

/* card title */
.card-title {
	position: relative;
	padding-bottom: 1rem;
}

/* card title underline */
.card-title::after {
	content: "";
	position: absolute;
	left: calc(var(--padding) * -1);
	bottom: 0.7rem;
	height: 2px;
	width: calc(100% + var(--padding));
	background: var(--colour-fg);
}

/* card button */
.card-link {
	display: inline-block;
	background: var(--colour-accent);
	padding: 0.3em 0.8em;
	border-radius: 0.25em;
}

/* only do these animations if the primary pointing device can hover and animations are enabled */
@media screen and (hover) and (prefers-reduced-motion: no-preference) {
	/* scale and rotate when hover (rotations controlled by JavaScript */
	.card {
		transition: transform 300ms ease-out;
		transform: perspective(var(--perspective)) rotateX(var(--rotateX)) rotateY(var(--rotateY)) scale(var(--scale));
	}

	.card:hover, .card:focus-within {
		--scale: 1.03;
	}

	/* animate underline for title */
	.card-title::after {
		transform: scaleX(0);
		transform-origin: left;
		transition: transform 500ms ease;
	}

	.card:hover .card-title::after, .card:focus-within .card-title::after {
		transform: scaleX(1);
	}

	/* content moves up on hover */
	.card-content {
		transform: translateY(calc(100% - var(--title-height) - var(--padding)));
		transition: transform 500ms ease;
	}

	.card:hover .card-content, .card:focus-within .card-content {
		transform: translateY(0);
	}

	/* remove jitter when the card comes into focus via keyboard navigation */
	.card:focus-within .card-content {
		transition-duration: 0ms;
	}
}
